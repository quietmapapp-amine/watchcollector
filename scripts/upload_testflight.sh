#!/bin/bash

# Script simple pour uploader l'IPA vers TestFlight

set -e

echo "ðŸš€ Upload vers TestFlight..."

# VÃ©rifier que l'IPA existe
IPA_PATH="build/WatchCollector.ipa"
if [ ! -f "$IPA_PATH" ]; then
    echo "ðŸ”´ IPA non trouvÃ©: $IPA_PATH"
    echo "ðŸ’¡ ExÃ©cutez d'abord: ./scripts/build_ios.sh"
    exit 1
fi

echo "âœ… IPA trouvÃ©: $IPA_PATH"
echo "ðŸ“Š Taille: $(ls -lh "$IPA_PATH" | awk '{print $5}')"

# VÃ©rifier que la clÃ© API existe
API_KEY_FILE=".private/appstoreconnect_api_key.p8"
if [ ! -f "$API_KEY_FILE" ]; then
    echo "ðŸ”´ ClÃ© API non trouvÃ©e: $API_KEY_FILE"
    exit 1
fi

echo "âœ… ClÃ© API trouvÃ©e: $API_KEY_FILE"

# Charger les variables d'environnement
if [ -f ".env" ]; then
    export $(grep -v '^#' .env | xargs)
    echo "âœ… Variables d'environnement chargÃ©es"
else
    echo "ðŸ”´ Fichier .env non trouvÃ©"
    exit 1
fi

# VÃ©rifier les variables critiques
if [ -z "$ASC_KEY_ID" ] || [ -z "$ASC_ISSUER_ID" ]; then
    echo "ðŸ”´ Variables ASC_KEY_ID ou ASC_ISSUER_ID manquantes dans .env"
    exit 1
fi

echo "âœ… Variables ASC configurÃ©es:"
echo "   Key ID: $ASC_KEY_ID"
echo "   Issuer ID: $ASC_ISSUER_ID"

echo ""
echo "ðŸ“¤ Upload vers TestFlight avec xcrun altool..."

# Upload avec xcrun altool
xcrun altool --upload-app \
    --type ios \
    --file "$IPA_PATH" \
    --apiKey "$ASC_KEY_ID" \
    --apiIssuer "$ASC_ISSUER_ID"

if [ $? -eq 0 ]; then
    echo ""
    echo "ðŸŽ‰ Upload vers TestFlight rÃ©ussi !"
    echo ""
    echo "ðŸ“‹ Prochaines Ã©tapes:"
    echo "   1. VÃ©rifier dans App Store Connect que le build est visible"
    echo "   2. Attendre que le build soit traitÃ© (10-30 min)"
    echo "   3. Ajouter des notes de version si nÃ©cessaire"
    echo "   4. Distribuer aux testeurs internes"
    echo ""
    echo "ðŸ”— App Store Connect: https://appstoreconnect.apple.com"
else
    echo "ðŸ”´ Erreur lors de l'upload vers TestFlight"
    exit 1
fi
